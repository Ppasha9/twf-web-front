import React from "react";

import { useFieldArray, useForm, FormProvider } from "react-hook-form";

import "./custom-forms.scss";
import LevelForm, { LevelType } from "./level-form";

import Icon from "@mdi/react";
import { mdiPlus } from "@mdi/js";

const CustomForms: React.FC = () => {
  type FormInputs = {
    gameName: string;
    gameSpace: string;
    levels: {
      name: string;
      levelType: LevelType;
      startExpression: string;
      goalType: string;
      goalExpression: string;
      goalNaturalNumber: number;
      subjectTypes: string;
      additionalPacks: string;
      customLevelPack: string;
      expectedSteps: number;
      expectedTime: number;
      levelNameEn: string;
      levelNameRu: string;
      levelCode: string;
      autoGeneratedLevelsCount: number;
      operations: string;
      stepsCountInterval: string;
      implicitTransformationsCount: number;
    }[];
  };

  const methods = useForm<FormInputs>({
    mode: "onSubmit",
  });

  const { register, getValues, control } = methods;

  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(
    {
      control, // control props comes from useForm (optional: if you are using FormContext)
      name: "levels", // unique name for your Field Array
    }
  );

  return (
    <div className="u-container custom-forms">
      <FormProvider {...methods}>
        <div className="form-group">
          <label>Название игры</label>
          <input
            name="gameName"
            type="text"
            className="form-control"
            ref={register}
          />
        </div>
        <div className="form-group">
          <label>Game Space</label>
          <input
            name="gameSpace"
            type="text"
            className="form-control"
            ref={register}
          />
        </div>
        <h3>Уровни</h3>
        <div className="custom-forms__levels">
          {fields.map((field, index: number) => {
            return (
              <div
                key={field.id}
                style={{ display: "flex", alignItems: "center" }}
              >
                <LevelForm
                  index={index}
                  defaultValue={fields[index]}
                  remove={remove}
                  swap={swap}
                />
              </div>
            );
          })}
          <button
            className="btn"
            onClick={() => {
              append({
                levelType: LevelType.AUTO,
              });
            }}
          >
            <Icon path={mdiPlus} size={1.2} />
            <span>автоматический уровень</span>
          </button>
          <button
            className="btn"
            onClick={() => {
              append({
                levelType: LevelType.MANUAL,
              });
            }}
          >
            <Icon path={mdiPlus} size={1.2} />
            <span>ручной уровень</span>
          </button>
        </div>
        <button
          className="btn u-mt-md"
          onClick={() => console.log(getValues())}
        >
          get values
        </button>
      </FormProvider>
    </div>
  );
};

export default CustomForms;
